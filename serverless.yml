# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: swwapi  

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: azure
  region: West US 2
  runtime: nodejs12
  # os: windows  # windows is default, linux is available
  # prefix: "sample"  # prefix of generated resource name
  # subscriptionId: A356AC8C-E310-44F4-BF85-C7F29044AF99
  # stage: dev
  # type: premium  # premium azure functions

  environment: # these will be created as application settings
    VARIABLE_FOO: 'foo'

  # you can define apim configuration here
  # apim:
  #   apis:
  #     - name: v1
  #       subscriptionRequired: false # if true must provide an api key
  #       displayName: v1
  #       description: V1 sample app APIs
  #       protocols:
  #         - https
  #       path: v1
  #       tags:
  #         - tag1
  #         - tag2
  #       authorization: none
  #   cors:
  #     allowCredentials: false
  #     allowedOrigins:
  #       - "*"
  #     allowedMethods:
  #       - GET
  #       - POST
  #       - PUT
  #       - DELETE
  #       - PATCH
  #     allowedHeaders:
  #       - "*"
  #     exposeHeaders:
  #       - "*"

plugins: # look for additional plugins in the community plugins repo: https://github.com/serverless/plugins
  - serverless-azure-functions

# you can add packaging information here 
package:
  patterns:
    # - '!exclude-me.js'
    # - '!exclude-me-dir/**'
    - '!local.settings.json'
    - '!.vscode/**'
    # - include-me.js
    # - include-me-dir/**

functions:
  PlanetsCreate:
    handler: src/handlers/create.create
    events:
      - http: true 
        methods: 
          - POST
        route: planetas
        authLevel: anonymous 
      - cosmosDB: true
        direction: out
        name: record 
        databaseName: swdb
        collectionName: planetas
        connectionStringSetting: COSMOS_DB_CONNECTION 
        createIfNotExists: false 
  PlanetsGet:
    handler: src/handlers/get.get
    events:
      - http: true
        methods:
          - GET
        route: planetas  
        authLevel: anonymous
      - cosmosDB: true
        direction: in
        name: record 
        databaseName: swdb
        collectionName: planetas
        connectionStringSetting: COSMOS_DB_CONNECTION 
        createIfNotExists: false   
  Roots:
    handler: src/handlers/roots.roots
    events:
      - http: true
        methods:
          - GET
        route: roots  
        authLevel: anonymous
           
  